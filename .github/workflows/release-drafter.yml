

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Release Drafter
on:
  workflow_call:
    inputs:
      config-name:
        description: |
          If your workflow requires multiple release-drafter configs it be helpful to override the config-name.
          The config should still be located inside `.github` as that's where we are looking for config files.
        required: false
        type: string
        default: 'release-drafter.yml'

concurrency: release-drafter

jobs:
  detect-version:
    # skip release drafter on releases commits
    if: (!startsWith(github.event.head_commit.message , '[maven-release-plugin]'))

    name: Detect version
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: 'false'

      - id: has-pom
        run: |
          if [ -f pom.xml ]; then
            echo "status=true" >> $GITHUB_OUTPUT
          fi
          cat $GITHUB_OUTPUT

      - uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        if: steps.has-pom.outputs.status == 'true'
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'maven'

      - id: version
        if: steps.has-pom.outputs.status == 'true'
        run: |
          mvn --batch-mode --non-recursive help:evaluate -Dexpression=project.version -Doutput=target/version.txt
          V=$(cat target/version.txt)
          echo "version=${V%-SNAPSHOT}" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  update_release_draft:
    name: Update Release Draft
    needs: detect-version
    permissions:
      # write permission is required to create a github release
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@b1476f6e6eb133afa41ed8589daba6dc69b4d3f5  # v6
        with:
          config-name: ${{ inputs.config-name }}
          version: ${{ needs.detect-version.outputs.version }}
          commitish: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
